$tabs-props: (
	null: '.d-flex',
	vertical: '.flex-row'
);

$tab-props: (
	list: (
		null: '.nav' '.nav-tabs',
		grow: '.nav-fill',
		card: '.card-header-tabs'
	),
	content: '.tab-content',
	pane: '.tab-pane' '.show' '.active',
	item: (
		null: '.nav-item',
		link: (
			null: '.nav-link',
			active: '.active',
			disabled: '.disabled'
		)
	)
);

.#{$prefix-tabs} {
	@include apply-props($tabs-props);
	flex-direction: column;

	&-vertical {
		.#{$prefix-tab}-list {
			flex-direction: column;
			padding-right: 0;
			padding-bottom: calc(var(--u-card-cap-padding-y) * 0.5);
			border-right: 1px solid var(--u-nav-tabs-border-color);

			.#{$prefix-tab}-item-link-active {
				width: calc(100% + var(--u-nav-tabs-border-width)) !important;
				border-bottom-color: var(--u-nav-tabs-border-color) !important;
				border-right-color: var(--u-card-bg) !important;
			}

			.#{$prefix-tab}-item-link {
				width: 100%;

				border-bottom-left-radius: var(--u-nav-tabs-border-radius);
				border-top-right-radius: 0;
			}
		}
	}
}

.#{$prefix-tab} {
	@include apply-props($tab-props);

	&-item-link:not(.#{$prefix-tab}-item-link-icon) > .#{$prefix-icon} {
		@extend .me-2;
	}
}

.#{$prefix-card}-header > .#{$prefix-tab}-list {
	@extend .card-header-tabs;
}
